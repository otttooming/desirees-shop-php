@mixin text-common {
  text-shadow: 0 0 1px $color-black;
}

// REM calculation

// REM specific values
$remBaseSize: 16; // The size of 1rem in pixels
$remPx: 1 / $remBaseSize + 0rem; // The size of a pixel in rems
$remBase: $font-size-normal;

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@function convert-to-rem($value, $base-value: $remBaseSize)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

@function rem-calc($values, $base-value: $remBaseSize) {
  $max: length($values);
  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }
  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

@mixin rem($property, $value) {
  $pxValue: $value;
  $remValue: rem-calc($value);

  // #{$property}: $pxValue;
  #{$property}: $remValue;
}

// font-face
@mixin fontFace($family,$src,$style: normal,$weight: normal) {
	@font-face {
		font-family: $family;
		src: url('#{$src}.woff2') format('woff2'),
			   url('#{$src}.woff') format('woff');

		font-style: $style;
		font-weight: $weight;
	}
}
